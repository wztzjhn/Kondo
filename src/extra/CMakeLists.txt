add_executable(test_kpm test_kpm.cpp)
if(WITH_CUDA)
    set_target_properties(test_kpm PROPERTIES CUDA_ARCHITECTURES "60;61;70;75;80;86")
    target_link_libraries(test_kpm PRIVATE CUDA::cudart CUDA::cublas CUDA::cusparse)
    target_link_options(test_kpm PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-Xlinker=-lpthread -Xlinker=-lrt -Xlinker=-ldl>)
endif()
target_link_libraries(test_kpm PRIVATE ${LIBS})

add_executable(test_BdG test_BdG.cpp)
if(WITH_CUDA)
    set_target_properties(test_BdG PROPERTIES CUDA_ARCHITECTURES "60;61;70;75;80;86")
    target_link_libraries(test_BdG PRIVATE CUDA::cudart CUDA::cublas CUDA::cusparse)
    target_link_options(test_BdG PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-Xlinker=-lpthread -Xlinker=-lrt -Xlinker=-ldl>)
endif()
target_link_libraries(test_BdG PRIVATE ${LIBS})

add_executable(conductivity conductivity.cpp $<TARGET_OBJECTS:kondo_base>)
if(WITH_CUDA)
    set_target_properties(conductivity PROPERTIES CUDA_ARCHITECTURES "60;61;70;75;80;86")
    target_link_libraries(conductivity PRIVATE CUDA::cudart CUDA::cublas CUDA::cusparse)
    target_link_options(conductivity PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-Xlinker=-lpthread -Xlinker=-lrt -Xlinker=-ldl>)
endif()
target_link_libraries(conductivity PRIVATE ${LIBS})

add_executable(test_conductivity test_conductivity.cpp $<TARGET_OBJECTS:kondo_base>)
if(WITH_CUDA)
    set_target_properties(test_conductivity PROPERTIES CUDA_ARCHITECTURES "60;61;70;75;80;86")
    target_link_libraries(test_conductivity PRIVATE CUDA::cudart CUDA::cublas CUDA::cusparse)
    target_link_options(test_conductivity PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-Xlinker=-lpthread -Xlinker=-lrt -Xlinker=-ldl>)
endif()
target_link_libraries(test_conductivity PRIVATE ${LIBS})

add_executable(variational variational.cpp $<TARGET_OBJECTS:kondo_base>)
if(WITH_CUDA)
    set_target_properties(variational PROPERTIES CUDA_ARCHITECTURES "60;61;70;75;80;86")
    target_link_libraries(variational PRIVATE CUDA::cudart CUDA::cublas CUDA::cusparse)
    target_link_options(variational PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:-Xlinker=-lpthread -Xlinker=-lrt -Xlinker=-ldl>)
endif()
target_link_libraries(variational PRIVATE ${LIBS})
